{"version":3,"file":"main.js","mappings":"mBACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,mBCC3E,IAAMI,EAAY,SAACC,GACtBA,EAAaC,UAAUC,IAAI,mBAC3BC,SAASC,iBAAiB,UAAWC,EACzC,EAGaC,EAAa,SAACN,GACvBA,EAAaC,UAAUM,OAAO,mBAC9BJ,SAASK,oBAAoB,UAAWH,EAC5C,EAGMA,EAAa,SAACI,GAChB,IAAMC,EAAcP,SAASQ,cAAc,oBAC3B,WAAZF,EAAIrB,KACJkB,EAAWI,EAEnB,EChBME,EAAS,CACXC,QAAS,4CACTC,QAAS,CACLC,cAAe,uCACf,eAAgB,qBAKlBC,EAAiB,SAACC,GACpB,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,WAADC,OAAYL,EAAIM,QACzC,ECXO,SAASC,EAAWC,EAAMC,EAASC,EAAYC,EAAgBC,GAElE,IAAMC,EAAWC,EAAapB,cAAc,SAASqB,WAAU,GAEzDC,EAAeH,EAASnB,cAAc,wBACtCuB,EAAUJ,EAASnB,cAAc,gBACjCwB,EAAaL,EAASnB,cAAc,sBACpCyB,EAAYN,EAASnB,cAAc,qBA4BrC,OA3BcmB,EAASnB,cAAc,gBAE/B0B,YAAcZ,EAAKa,KAC7BJ,EAAQK,IAAMd,EAAKe,KACnBN,EAAQO,IAAMhB,EAAKa,KACnBF,EAAUC,YAAcZ,EAAKiB,MAAMC,OAGhClB,EAAKiB,MAAME,MAAK,SAACC,GAAI,OAAKA,EAAKC,MAAQjB,CAAM,IAC5CM,EAAWlC,UAAUC,IAAI,+BAEzBiC,EAAWlC,UAAUM,OAAO,+BAI7BkB,EAAKsB,MAAMD,MAAQjB,GAClBC,EAASkB,QAAQC,gBAAkBxB,EAAKqB,IACxCb,EAAa7B,iBAAiB,SAAS,kBAAMuB,EAAWF,EAAKqB,IAAKhB,EAAS,KAEvEG,EAAa1B,SAIjB2B,EAAQ9B,iBAAiB,SAAS,kBAAMsB,EAAQD,EAAK,IAGrDU,EAAW/B,iBAAiB,SAAS,kBAAMwB,EAAeH,EAAMU,EAAYC,EAAWP,EAAO,IACvFC,CACX,CAGG,SAASF,EAAeH,EAAMU,EAAYC,EAAWP,GAEpDJ,EAAKiB,MAAME,MAAK,SAACC,GAAI,OAAKA,EAAKC,MAAQjB,CAAM,ID2BpB,SAACJ,GAC9B,OAAOyB,MAAM,GAAD5B,OAAIV,EAAOC,QAAO,iBAAAS,OAAgBG,EAAKqB,KAAO,CACtDK,OAAQ,SACRrC,QAASF,EAAOE,UAEnBsC,KAAKpC,EACV,CC/BQqC,CAAkB5B,GAEjB2B,MAAK,SAACE,GACHlB,EAAUC,YAAciB,EAAQZ,MAAMC,OACtCR,EAAWlC,UAAUM,OAAO,+BAC5BkB,EAAKiB,MAAQY,EAAQZ,KACzB,IACCa,OAAM,SAACC,GAAK,OAAKC,QAAQC,IAAIF,EAAM,IDUd,SAAC/B,GAC3B,OAAOyB,MAAM,GAAD5B,OAAIV,EAAOC,QAAO,iBAAAS,OAAgBG,EAAKqB,KAAO,CACtDK,OAAQ,MACRrC,QAASF,EAAOE,UAEnBsC,KAAKpC,EACV,CCbQ2C,CAAelC,GAEd2B,MAAK,SAACE,GACLlB,EAAUC,YAAciB,EAAQZ,MAAMC,OACtCR,EAAWlC,UAAUC,IAAI,+BACzBuB,EAAKiB,MAAQY,EAAQZ,KACvB,IACCa,OAAM,SAACC,GAAK,OAAKC,QAAQC,IAAIF,EAAM,GAE5C,CClEO,IAAMI,EAAiB,SAACC,EAAaC,EAAcC,EAAcC,GACpE,IAAMC,EAAeJ,EAAYlD,cAAc,IAADW,OAAKwC,EAAaI,GAAE,WAClEJ,EAAa7D,UAAUC,IAAI8D,EAAiBG,iBAC5CF,EAAa5B,YAAc0B,EAC3BE,EAAahE,UAAUC,IAAI8D,EAAiBI,WAChD,EAGaC,EAAiB,SAACR,EAAaC,EAAcE,GACtD,IAAMC,EAAeJ,EAAYlD,cAAc,IAADW,OAAKwC,EAAaI,GAAE,WAClEJ,EAAa7D,UAAUM,OAAOyD,EAAiBG,iBAC/CL,EAAaQ,kBAAkB,IAC/BL,EAAahE,UAAUM,OAAOyD,EAAiBI,YAC/CH,EAAa5B,YAAc,EAE/B,EAuBakC,EAAoB,SAACC,EAAWC,EAAeT,IAPpC,SAACQ,GACrB,OAAOA,EAAU5B,MAAK,SAAC8B,GACnB,OAAQA,EAAMC,SAASC,KAC3B,GACJ,CAIQC,CAAgBL,IAIhBC,EAAcK,UAAW,EACzBL,EAAcxE,UAAUM,OAAOyD,EAAiBe,uBAJhDN,EAAcK,UAAW,EACzBL,EAAcxE,UAAUC,IAAI8D,EAAiBe,qBAKrD,EA2BaC,EAAkB,SAACnB,EAAaG,GACzC,IAAMQ,EAAYS,MAAMC,KAAKrB,EAAYsB,iBAAiBnB,EAAiBoB,gBACrEX,EAAgBZ,EAAYlD,cAAcqD,EAAiBqB,sBACjEb,EAAUc,SAAQ,SAACxB,GACfO,EAAeR,EAAaC,EAAcE,EAC9C,IACAO,EAAkBC,EAAWC,EAAeT,EAChD,E,sGC1EO,IAqDInC,EArDEE,EAAe5B,SAASQ,cAAc,kBAAkB4E,QAG/DC,EAAarF,SAASQ,cAAc,iBAGpC8E,EAAWtF,SAASQ,cAAc,qBAClC+E,EAAUD,EAAS9E,cAAc,iBACjCgF,EAAaF,EAAS9E,cAAc,mBACpCiF,EAAmBzF,SAASgF,iBAAiB,iBAI7CU,GAHe1F,SAASgF,iBAAiB,kBAG7BhF,SAASQ,cAAc,qBACnCkD,EAAcgC,EAAUlF,cAAc,gBACtCmF,EAAmBjC,EAAYlD,cAAc,kBAC7CoF,EAAYlC,EAAYlD,cAAc,2BACtCqF,EAAWnC,EAAYlD,cAAc,kCACrCsF,EAAe9F,SAASQ,cAAc,mBACtCuF,EAAqB/F,SAASQ,cAAc,yBAC5CwF,EAAehG,SAASQ,cAAc,mBACtCyF,EAAqBjG,SAASQ,cAAc,wBAC5C0F,EAAsBlG,SAASQ,cAAc,yBAG7C2F,EAAkBnG,SAASQ,cAAc,2BACzC4F,EAAaD,EAAgB3F,cAAc,gBAC3C6F,EAAqBD,EAAW5F,cAAc,kBAC9C8F,EAAkBF,EAAW5F,cAAc,0BAC3C+F,EAAkBvG,SAASQ,cAAc,qBAGzCgG,EAAWxG,SAASQ,cAAc,wBAClCiG,EAAeD,EAAShG,cAAc,gBACtCkG,EAAaD,EAAajG,cAAc,gCACxCmG,EAAYF,EAAajG,cAAc,0BACvCoG,EAAuBJ,EAAShG,cAAc,kBAG9CqG,EAAkB7G,SAASQ,cAAc,2BACzCsG,EAAoBD,EAAgBrG,cAAc,gBAGlDqD,EAAmB,CACrBkD,aAAc,eACd9B,cAAe,gBACfC,qBAAsB,iBACtBN,oBAAqB,yBACrBZ,gBAAiB,0BACjBC,WAAY,wBAOhB,SAAS+C,EAAcC,EAAW3C,GAE1BA,EAAcpC,YADd+E,EAC4B,gBAEA,WAEpC,CAsGA,SAAS1F,EAAQD,GACbiE,EAAQnD,IAAMd,EAAKe,KACnBkD,EAAQjD,IAAMhB,EAAKa,KACnBqD,EAAWtD,YAAcZ,EAAKa,KAC9BvC,EAAU0F,EACd,EDjHgC,SAACzB,GACZiB,MAAMC,KAAK/E,SAASgF,iBAAiBnB,EAAiBkD,eAC9D5B,SAAQ,SAACzB,GACdA,EAAYzD,iBAAiB,UAAU,SAAUK,GACjDA,EAAI4G,gBACR,IAlBsB,SAACxD,EAAaG,GACpC,IAAMQ,EAAYS,MAAMC,KAAKrB,EAAYsB,iBAAiBnB,EAAiBoB,gBACrEX,EAAgBZ,EAAYlD,cAAcqD,EAAiBqB,sBACjEd,EAAkBC,EAAWC,EAAeT,GAC5CQ,EAAUc,SAAQ,SAACxB,GACfA,EAAa1D,iBAAiB,SAAS,YApC/B,SAACyD,EAAaC,EAAcE,GACpCF,EAAaa,SAAS2C,gBACtBxD,EAAaQ,kBAAkBR,EAAad,QAAQe,cAEpDD,EAAaQ,kBAAkB,IAE9BR,EAAaa,SAASC,MAGvBP,EAAeR,EAAaC,EAAcE,GAF1CJ,EAAeC,EAAaC,EAAcA,EAAayD,kBAAmBvD,EAIlF,CA0BYwD,CAAQ3D,EAAaC,EAAcE,GACnCO,EAAkBC,EAAWC,EAAeT,EAChD,GACJ,GACJ,CASIyD,CAAkB5D,EAAaG,EACnC,GACA,CCCA0D,CAAiB1D,GAqBjBqC,EAAoBjG,iBAAiB,SAAS,WAC1C2F,EAAU4B,MAAQ1B,EAAa5D,YAC/B2D,EAAS2B,MAAQzB,EAAmB7D,YACpCtC,EAAU8F,GACVb,EAAgBnB,EAAaG,EACjC,IAGAH,EAAYzD,iBAAiB,UA1B7B,SAAqBK,GACjBA,EAAI4G,iBACJF,GAAc,EAAMrB,GHxCW,SAACG,EAAcC,GAC9C,OAAOhD,MAAM,GAAD5B,OAAIV,EAAOC,QAAO,aAAa,CACvCsC,OAAQ,QACRrC,QAASF,EAAOE,QAChB8G,KAAMC,KAAKC,UAAU,CACrBxF,KAAM2D,EACN8B,MAAO7B,MAGV9C,KAAKpC,EACV,CG+BIgH,CAAoBjC,EAAU4B,MAAO3B,EAAS2B,OAC7CvE,MAAK,WACF6C,EAAa5D,YAAc0D,EAAU4B,MACrCzB,EAAmB7D,YAAc2D,EAAS2B,MAC1CrH,EAAWuF,EACf,IACCtC,OAAM,SAACC,GACJC,QAAQC,IAAI,+BAADpC,OAAgCkC,GAC/C,IACCyE,SAAQ,WACLd,GAAc,EAAOrB,EACzB,GACJ,IAwCAY,EAAgBtG,iBAAiB,SAAS,WACtCqD,QAAQC,IAAI,SACZ6C,EAAW2B,QACXnI,EAAUuG,GACVtB,EAAgBsB,EAAiBtC,EACrC,IAGAuC,EAAWnG,iBAAiB,UAjC5B,SAAoBK,GHHQ,IAAC0H,EGIzB1H,EAAI4G,kBHJqBc,EGKZ1B,EAAgBkB,MHJtBzE,MAAMiF,EAAK,CACdhF,OAAQ,SAEXC,MAAK,SAAC+E,GACH,OAAIA,EAAIjH,GACDiH,EAAIrH,QAAQrB,IAAI,gBAAgB2I,SAAS,SACrChH,QAAQiH,UAEZjH,QAAQC,OAAO,gCAEfD,QAAQC,OAAO,oBAC1B,KGNC+B,MAAK,WAEF,IHnB2BZ,EGkB3B2E,GAAc,EAAMX,IHlBOhE,EGmBPiE,EAAgBkB,MHlBjCzE,MAAM,GAAD5B,OAAIV,EAAOC,QAAO,oBAAoB,CAChDsC,OAAQ,QACRrC,QAASF,EAAOE,QAChB8G,KAAMC,KAAKC,UAAU,CACnBQ,OAAQ9F,MAEXY,KAAKpC,IGcDoC,MAAK,SAACmF,GACHpC,EAAaqC,MAAMC,gBAAkB,OAAHnH,OAAUiH,EAAWD,OAAM,KAC7DhI,EAAWgG,EACjB,IACD/C,OAAM,SAACC,GACJC,QAAQC,IAAI,+BAADpC,OAAgCkC,GAC7C,IACCyE,SAAQ,WACPd,GAAc,EAAOX,EACvB,IACDjD,OAAM,SAACC,GACJI,EAAe2C,EAAYE,EAAiBjD,EAAOQ,GACnDO,EAAkBkC,EAAiBD,EAAoBxC,EAC3D,GACJ,GACC,IAgCDoC,EAAmBhG,iBAAiB,SAAS,WAEzCwG,EAAasB,QACblD,EAAgB4B,EAAc5C,GAC9BjE,EAAU4G,EAEd,IAGAC,EAAaxG,iBAAiB,UA3BvB,SAAoBK,GACvBA,EAAI4G,iBACJF,GAAc,EAAMJ,GH7FU,SAACF,EAAYC,GAC3C,OAAO5D,MAAM,GAAD5B,OAAIV,EAAOC,QAAO,UAAU,CACpCsC,OAAQ,OACRrC,QAASF,EAAOE,QAChB8G,KAAMC,KAAKC,UAAU,CAGrBxF,KAAMuE,EACNrE,KAAMsE,MAGT1D,KAAKpC,EACV,CGkFI0H,CAAmB7B,EAAWc,MAAOb,EAAUa,OAC5CvE,MAAK,SAAC3B,GACL+D,EAAWmD,QAAQnH,EAAWC,EAAMC,EAASC,EAAYC,EAAgBC,IACzEvB,EAAWqG,GACXC,EAAasB,OACf,IACD3E,OAAM,SAACC,GACJC,QAAQC,IAAI,+BAADpC,OAAgCkC,GAC7C,IACCyE,SAAQ,WACPd,GAAc,EAAOJ,EACvB,GACJ,IAuBK,IAAI9D,EAAkB,CAAC,EACxBtB,EAAa,SAACiH,EAAQ9G,GACxBmB,EAAkB,CACdiB,GAAI0E,EAAQ9G,SAAAA,GAEhB/B,EAAUiH,EACd,EAiBAC,EAAkB7G,iBAAiB,UAAU,SAACK,IAdf,SAACA,GH1GC,IAACmI,EG2G9BnI,EAAI4G,kBH3G0BuB,EG4GZ3F,EAAgBiB,GH3G3BhB,MAAM,GAAD5B,OAAIV,EAAOC,QAAO,WAAAS,OAAUsH,GAAU,CAC9CzF,OAAQ,SACRrC,QAASF,EAAOE,UAEnBsC,KAAKpC,IGwGLoC,MAAK,WACFH,EAAgBnB,SAASvB,SACzBD,EAAW0G,GACX/D,EAAkB,CAAC,CACvB,IACCM,OAAM,SAACC,GACJC,QAAQC,IAAI,wBAADpC,OAAyBkC,GACxC,GACJ,CAIIqF,CAAuBpI,EAC3B,IAGAW,QAAQ0H,IAAI,CH3LD5F,MAAM,GAAD5B,OAAIV,EAAOC,QAAO,aAAa,CACvCsC,OAAQ,MACRrC,QAASF,EAAOE,UAEnBsC,KAAKpC,GAKCkC,MAAM,GAAD5B,OAAIV,EAAOC,QAAO,UAAU,CACpCsC,OAAQ,MACRrC,QAASF,EAAOE,UAEnBsC,KAAKpC,KGgLToC,MAAK,SAAA2F,GAA2B,I,IAAAC,G,EAAA,E,4CAAAD,I,s1BAAzBE,EAAQD,EAAA,GAAEE,EAASF,EAAA,GACvB/C,EAAa5D,YAAc4G,EAAS3G,KACpC4D,EAAmB7D,YAAc4G,EAASlB,MAC1C5B,EAAa5D,IAAM0G,EAASX,OAC5BzG,EAASoH,EAASnG,IAElBoG,EAAU5D,SAAQ,SAAS7D,GACvB+D,EAAW2D,OAAO3H,EAAWC,EAAMC,EAASC,EAAYC,EAAgBC,GAC5E,GACJ,IAEC0B,OAAM,SAACC,GACJC,QAAQC,IAAI,+BAADpC,OAAgCkC,GAC/C,IAGAoC,EAAiBN,SAAQ,SAAC8D,GACtBA,EAAOhJ,iBAAiB,SAAS,SAACK,GAC9B,IAAM4I,EAAQ5I,EAAI6I,OAAOC,QAAQ,UACjCjJ,EAAW+I,EACf,GACJ,IAGe,CAACxD,EAAWc,EAAUlB,EAAUa,EAAiBU,GACzD1B,SAAQ,SAAA+D,GAAK,OJrNQ,SAACA,GACzBA,EAAMjJ,iBAAiB,SAAS,SAACK,GACzBA,EAAI6I,OAAOrJ,UAAUuJ,SAAS,oBAC9BlJ,EAAW+I,EAEnB,GACJ,CI+MwBI,CAAaJ,EAAM,G","sources":["webpack://yandex_praktikum/webpack/bootstrap","webpack://yandex_praktikum/webpack/runtime/define property getters","webpack://yandex_praktikum/webpack/runtime/hasOwnProperty shorthand","webpack://yandex_praktikum/./src/components/modal.js","webpack://yandex_praktikum/./src/components/api.js","webpack://yandex_praktikum/./src/components/card.js","webpack://yandex_praktikum/./src/components/validation.js","webpack://yandex_praktikum/./src/components/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","//открытие попап\nexport const openModal = (popupElement) => {\n    popupElement.classList.add('popup_is-opened');\n    document.addEventListener('keydown', closeByEsc);\n};\n\n//закрытие попап\nexport const closeModal = (popupElement) => {\n    popupElement.classList.remove('popup_is-opened');\n    document.removeEventListener('keydown', closeByEsc);\n};\n\n//закрытие by esc\nconst closeByEsc = (evt) => {\n    const openedPopup = document.querySelector('.popup_is-opened');\n    if (evt.key === 'Escape') {\n        closeModal(openedPopup);\n    };\n};\n\n//закрытие by overlay\nexport const closeOverlay = (popup) => {\n    popup.addEventListener('click', (evt) => {\n        if (evt.target.classList.contains('popup_is-opened')) {\n            closeModal(popup);\n        }\n    });\n};\n\n\n\n\n","\n//объект для авторизации\nconst config = {\n    baseUrl: 'https://nomoreparties.co/v1/wff-cohort-20',\n    headers: {\n        authorization: '2b46e9fc-1e2f-4c30-b303-a3bd469f0607',\n        'Content-Type': 'application/json'\n    }\n};\n\n//обработка ответа\nconst handleResponse = (res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n};\n\n//получение информации о пользователе с сервера\nexport const getUserRequest = () => {\n    return fetch(`${config.baseUrl}/users/me`, {\n        method: 'GET',\n        headers: config.headers\n    })\n    .then(handleResponse)\n};\n\n//загрузка карточек с сервера\nexport const getCardsRequest = () => {\n    return fetch(`${config.baseUrl}/cards`, {\n        method: 'GET',\n        headers: config.headers\n    })\n    .then(handleResponse)\n};\n\n//редактирование профиля\nexport const patchProfileRequest = (profileTitle, profileDescription) => {\n    return fetch(`${config.baseUrl}/users/me`, {\n        method: 'PATCH',\n        headers: config.headers,\n        body: JSON.stringify({\n        name: profileTitle,\n        about: profileDescription\n        })\n    })\n    .then(handleResponse);\n};\n\n//добавление новой карточки\nexport const postAddCardRequest = (placeInput, linkInput) => {\n    return fetch(`${config.baseUrl}/cards`, {\n        method: 'POST',\n        headers: config.headers,\n        body: JSON.stringify({\n        // name: placeInput.value,\n        // link: linkInput.value\n        name: placeInput,\n        link: linkInput\n        })\n    })\n    .then(handleResponse);\n};\n\n//постановка и снятие лайка\nexport const putLikeRequest = (item) => {\n    return fetch(`${config.baseUrl}/cards/likes/${item._id}`, {\n        method: 'PUT',\n        headers: config.headers\n    })\n    .then(handleResponse)\n};\n\nexport const deleteLikeRequest = (item) => {\n    return fetch(`${config.baseUrl}/cards/likes/${item._id}`, {\n        method: 'DELETE',\n        headers: config.headers\n    })\n    .then(handleResponse)\n};\n\n//удаление карточки\nexport const deleteCardRequest = (cardId) => {\n    return fetch(`${config.baseUrl}/cards/${cardId}`, {\n        method: 'DELETE',\n        headers: config.headers,\n    })\n    .then(handleResponse)\n};\n\n//обновление аватара\nexport const patchAvatarRequest = (link) => {\n    return fetch(`${config.baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: config.headers,\n      body: JSON.stringify({\n        avatar: link})\n    })\n    .then(handleResponse)\n  }\n\n//проверка url на изображение\nexport const headCheckUrl = (url) => {\n    return fetch(url, {\n        method: 'HEAD',\n    })\n    .then((url) => {\n        if (url.ok) {\n            if(url.headers.get('Content-type').includes('image')) {\n            return Promise.resolve();\n        }\n        return Promise.reject('url не является изображением');\n        }\n        return Promise.reject('url не существует');\n    });\n}","import { cardTemplate } from \"./index\";\nimport { putLikeRequest, deleteLikeRequest } from \"./api\";\n\n\n//функция создания карточки \nexport function createCard(item, openImg, deleteCard, putDeleteLikes, userId) {\n    //клонирование шаблона карточки\n    const cardItem = cardTemplate.querySelector('.card').cloneNode(true); \n    //получение элементов карточки\n    const deleteButton = cardItem.querySelector('.card__delete-button'); \n    const newCard = cardItem.querySelector('.card__image');\n    const likeButton = cardItem.querySelector('.card__like-button');\n    const likeCount = cardItem.querySelector(\".card__like-count\");\n    const cardTitle = cardItem.querySelector(\".card__title\");\n    //присвоение значений\n    cardTitle.textContent = item.name; \n    newCard.src = item.link; \n    newCard.alt = item.name; \n    likeCount.textContent = item.likes.length;\n\n    //проверка наличия моего лайка\n    if(item.likes.some((like) => like._id === userId)) {\n        likeButton.classList.add(\"card__like-button_is-active\");\n    } else {\n        likeButton.classList.remove(\"card__like-button_is-active\");\n    }\n\n    //настройка удаления своей карточки\n    if(item.owner._id === userId) {\n        cardItem.dataset.myCardForDelete = item._id;\n        deleteButton.addEventListener('click', () => deleteCard(item._id, cardItem));\n        } else {\n            deleteButton.remove();\n        }\n        \n        //обработчик открытия карточки\n        newCard.addEventListener('click', () => openImg(item));\n        \n        //обработчик постановки и снятия лайков\n        likeButton.addEventListener('click', () => putDeleteLikes(item, likeButton, likeCount, userId));\n        return cardItem;\n    };\n\n// Функция постановки и снятия лайков\nexport function putDeleteLikes(item, likeButton, likeCount, userId) {\n    //Проверка наличия моего лайка\n    if (item.likes.some((like) => like._id === userId)) {\n        //удаление только моего лайка\n        deleteLikeRequest(item)\n        //обновление количества лайков\n        .then((newItem) => {\n            likeCount.textContent = newItem.likes.length;\n            likeButton.classList.remove(\"card__like-button_is-active\");\n            item.likes = newItem.likes;\n        })\n        .catch((error) => console.log(error));\n    } else {\n        //добавление лайка (если не стоит)\n        putLikeRequest(item)\n        //обновление количества лайков\n        .then((newItem) => {\n          likeCount.textContent = newItem.likes.length;\n          likeButton.classList.add(\"card__like-button_is-active\");\n          item.likes = newItem.likes;\n        })\n        .catch((error) => console.log(error));\n    }\n}","//отображение сообщения об ошибке \nexport const showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n    inputElement.classList.add(validationConfig.inputErrorClass);\n    errorElement.textContent = errorMessage;\n    errorElement.classList.add(validationConfig.errorClass);\n};\n\n//скрытие сообщения об ошибке если ввод валиден \nexport const hideInputError = (formElement, inputElement, validationConfig) => {\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n    inputElement.classList.remove(validationConfig.inputErrorClass);\n    inputElement.setCustomValidity('');\n    errorElement.classList.remove(validationConfig.errorClass);\n    errorElement.textContent = '';\n\n};\n\n//проверка валидности полей\nconst isValid = (formElement, inputElement, validationConfig) => {\n    if (inputElement.validity.patternMismatch) {\n        inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n    } else {\n        inputElement.setCustomValidity('');\n    }\n    if (!inputElement.validity.valid) {\n        showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\n    } else {\n        hideInputError(formElement, inputElement, validationConfig);\n    }\n}; \n\nconst hasInvalidInput = (inputList) => {\n    return inputList.some((input) => {\n        return !input.validity.valid;\n    })\n}; \n\n//неактивная кнопка если значения невалидны  \nexport const toggleButtonState = (inputList, buttonElement, validationConfig) => {\n    if (hasInvalidInput(inputList)) {\n        buttonElement.disabled = true;\n        buttonElement.classList.add(validationConfig.inactiveButtonClass);\n    } else {\n        buttonElement.disabled = false;\n        buttonElement.classList.remove(validationConfig.inactiveButtonClass);\n    }\n};\n\n//слушатель для каждого input\nconst setEventListeners = (formElement, validationConfig) => {\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n    toggleButtonState(inputList, buttonElement, validationConfig);\n    inputList.forEach((inputElement) => {\n        inputElement.addEventListener('input', function () {\n            isValid(formElement, inputElement, validationConfig);\n            toggleButtonState(inputList, buttonElement, validationConfig);\n        });\n    });\n};\n\n//активация валидации\nexport const enableValidation = (validationConfig) => {\n    const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\n    formList.forEach((formElement) => {\n        formElement.addEventListener('submit', function (evt) {\n        evt.preventDefault();\n    });\n    setEventListeners(formElement, validationConfig);\n});\n};\n\n//очистка ошибок валидации\nexport const clearValidation = (formElement, validationConfig) => {\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n    inputList.forEach((inputElement) => {\n        hideInputError(formElement, inputElement, validationConfig);\n    });\n    toggleButtonState(inputList, buttonElement, validationConfig);\n};\n\n","import '../pages/index.css'; \nimport { openModal, closeModal, closeOverlay } from './modal';\nimport { createCard, putDeleteLikes } from './card';\nimport { enableValidation, clearValidation, showInputError, toggleButtonState } from './validation';\nimport { getUserRequest, getCardsRequest, patchProfileRequest, postAddCardRequest, headCheckUrl, deleteCardRequest, patchAvatarRequest } from './api';\n\n// @todo: Темплейт карточки \nexport const cardTemplate = document.querySelector('#card-template').content; \n \n// @todo: DOM узлы \nconst placesList = document.querySelector('.places__list'); \n\n// переменные для попапа\nconst popupImg = document.querySelector('.popup_type_image');\nconst imgCard = popupImg.querySelector('.popup__image');\nconst imgCaption = popupImg.querySelector('.popup__caption');\nconst closeButtonPopup = document.querySelectorAll('.popup__close');\nconst submitButton = document.querySelectorAll('.popup__button');//уточнить в случае необходимости\n\n//переменные для формы редатирования имени и информации\nconst popupEdit = document.querySelector('.popup_type_edit');\nconst formElement = popupEdit.querySelector('.popup__form');\nconst buttonFormSubmit = formElement.querySelector('.popup__button');\nconst nameInput = formElement.querySelector('.popup__input_type_name');\nconst jobInput = formElement.querySelector('.popup__input_type_description');\nconst profileTitle = document.querySelector('.profile__title');\nconst profileDescription = document.querySelector('.profile__description');\nconst profileImage = document.querySelector('.profile__image');\nconst openButtonPopupAdd = document.querySelector('.profile__add-button');\nconst openButtonPopupEdit = document.querySelector('.profile__edit-button');\n\n//переменные для изменения аватара\nconst popupEditAvatar = document.querySelector('.popup_type_edit-avatar');\nconst formAvatar = popupEditAvatar.querySelector('.popup__form');\nconst buttonSubmitAvatar = formAvatar.querySelector('.popup__button');\nconst inputAvatarForm = formAvatar.querySelector('.popup__input_type_url');\nconst avatarContainer = document.querySelector('.avatar-container');\n\n//переменные для добавления картинки\nconst popupAdd = document.querySelector('.popup_type_new-card');\nconst formForImage = popupAdd.querySelector('.popup__form');\nconst placeInput = formForImage.querySelector('.popup__input_type_card-name');\nconst linkInput = formForImage.querySelector('.popup__input_type_url');\nconst buttonSubmitPopupAdd = popupAdd.querySelector('.popup__button');\n\n//переменные для удаления карточки\nconst popupDeleteCard = document.querySelector('.popup_type_delete-card');\nconst formForDeleteCard = popupDeleteCard.querySelector('.popup__form');\n\n//объект для валидации\nconst validationConfig = {\n    formSelector: \".popup__form\",\n    inputSelector: \".popup__input\",\n    submitButtonSelector: \".popup__button\",\n    inactiveButtonClass: \"popup__button_disabled\",\n    inputErrorClass: \"popup__input_type_error\",\n    errorClass: \"popup__error_visible\"\n};\n\n//мой пользователь\nexport let userId;\n\n//рендеринг\nfunction renderLoading(isLoading, buttonElement) {\n    if (isLoading) {\n        buttonElement.textContent = 'Сохранение...';\n    } else {\n        buttonElement.textContent = 'Сохранить';\n    }\n};\n\n//вызов валидации формы\nenableValidation(validationConfig);\n\n//редактирование имени и информации о себе\nfunction editAccount(evt) {\n    evt.preventDefault(); \n    renderLoading(true, buttonFormSubmit);\n    patchProfileRequest(nameInput.value, jobInput.value)\n    .then(() => {\n        profileTitle.textContent = nameInput.value;\n        profileDescription.textContent = jobInput.value;\n        closeModal(popupEdit);\n    })\n    .catch((error) => {\n        console.log(`Ошибка при загрузке данных: ${error}`);\n    })\n    .finally(() => {\n        renderLoading(false, buttonFormSubmit);\n    })\n};\n\n//обработчик редактирования учетки \nopenButtonPopupEdit.addEventListener('click', () => {\n    nameInput.value = profileTitle.textContent;\n    jobInput.value = profileDescription.textContent;\n    openModal(popupEdit);//открыть модальное окно\n    clearValidation(formElement, validationConfig);//очистить ошибки валидации\n});\n\n//слушатель формы редактирования учетки\nformElement.addEventListener('submit', editAccount);\n\n\n// редактирование аватара\nfunction editAvatar(evt) {\n    evt.preventDefault();\n    headCheckUrl(inputAvatarForm.value)\n    .then(() => {\n        renderLoading(true, buttonSubmitAvatar);\n        const avatarValue = inputAvatarForm.value;\n        patchAvatarRequest(avatarValue)\n        .then((avatarData) => {\n            profileImage.style.backgroundImage = `url(${avatarData.avatar})`;\n            closeModal(popupEditAvatar);\n      })\n    .catch((error) => {\n        console.log(`Ошибка при загрузке данных: ${error}`);\n      })\n      .finally(() => {\n        renderLoading(false, buttonSubmitAvatar);\n      })\n    .catch((error) => {\n        showInputError(formAvatar, inputAvatarForm, error, validationConfig);\n        toggleButtonState(inputAvatarForm, buttonSubmitAvatar, validationConfig);\n    });\n}\n)};\n\n//открыть попап редактирования аватара\navatarContainer.addEventListener('click', () => {\n    console.log(\"click\");\n    formAvatar.reset();\n    openModal(popupEditAvatar);\n    clearValidation(popupEditAvatar, validationConfig);//очистить ошибки валидации\n});\n\n//слушатель редактирования аватара\nformAvatar.addEventListener('submit', editAvatar);\n\n//добавление новой картинки\nexport function addNewCard(evt) {\n    evt.preventDefault();\n    renderLoading(true, buttonSubmitPopupAdd);\n    postAddCardRequest(placeInput.value, linkInput.value)\n      .then((item) => {\n        placesList.prepend(createCard(item, openImg, deleteCard, putDeleteLikes, userId));\n        closeModal(popupAdd);//закрыть форму\n        formForImage.reset();\n      })\n    .catch((error) => {\n        console.log(`Ошибка при загрузке данных: ${error}`);\n      })\n      .finally(() => {\n        renderLoading(false, buttonSubmitPopupAdd);\n      })\n  };\n\n//обработчик открытия попапа добавления карточки\nopenButtonPopupAdd.addEventListener('click', () => {\n    // console.log(\"click\");\n    formForImage.reset();\n    clearValidation(formForImage, validationConfig);//очистить ошибки валидации\n    openModal(popupAdd);\n    // console.log('Попап должен открыться');\n});\n\n//слушатель добавления карточки\nformForImage.addEventListener('submit', addNewCard);\n\n//открыть попап картинку\nfunction openImg(item) {\n    imgCard.src = item.link;\n    imgCard.alt = item.name;\n    imgCaption.textContent = item.name;\n    openModal(popupImg);\n};\n\n//открыть попап удаления карточки\nexport let myCardForDelete = {};\nconst deleteCard = (cardId, cardItem) => {\n    myCardForDelete = {\n        id: cardId, cardItem\n    }\n    openModal(popupDeleteCard);\n};\n\n//функция удаления карточки\nconst handleDeleteCardSubmit = (evt) => {\n    evt.preventDefault();\n    deleteCardRequest(myCardForDelete.id)\n    .then(() => {\n        myCardForDelete.cardItem.remove();\n        closeModal(popupDeleteCard);\n        myCardForDelete = {};\n    })\n    .catch((error) => {\n        console.log(`Error deleting card: ${error}`);\n    })\n}\n\n//слушатель на попап удаления карточки\nformForDeleteCard.addEventListener('submit', (evt) => {\n    handleDeleteCardSubmit(evt);\n});\n\n//загрузка данных пользователя и карточек\nPromise.all([getUserRequest(), getCardsRequest()])\n// Обработка извлеченных данных\n.then(([userData, cardsData]) => {\n    profileTitle.textContent = userData.name;\n    profileDescription.textContent = userData.about;\n    profileImage.src = userData.avatar;\n    userId = userData._id;\n    // Вывод карточек на страницу \n    cardsData.forEach(function(item) {\n        placesList.append(createCard(item, openImg, deleteCard, putDeleteLikes, userId)); \n    }); \n})\n// Обработка ошибки\n.catch((error) => {\n    console.log(`Ошибка при загрузке данных: ${error}`);\n});\n\n//закрыть форму by x\ncloseButtonPopup.forEach((button) => {\n    button.addEventListener('click', (evt) => {\n        const popup = evt.target.closest('.popup');\n        closeModal(popup);\n    });\n});\n\n//закрыть по клику на оверлей\nconst popups = [popupEdit, popupAdd, popupImg, popupEditAvatar, popupDeleteCard];\npopups.forEach(popup => closeOverlay(popup));"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","openModal","popupElement","classList","add","document","addEventListener","closeByEsc","closeModal","remove","removeEventListener","evt","openedPopup","querySelector","config","baseUrl","headers","authorization","handleResponse","res","ok","json","Promise","reject","concat","status","createCard","item","openImg","deleteCard","putDeleteLikes","userId","cardItem","cardTemplate","cloneNode","deleteButton","newCard","likeButton","likeCount","textContent","name","src","link","alt","likes","length","some","like","_id","owner","dataset","myCardForDelete","fetch","method","then","deleteLikeRequest","newItem","catch","error","console","log","putLikeRequest","showInputError","formElement","inputElement","errorMessage","validationConfig","errorElement","id","inputErrorClass","errorClass","hideInputError","setCustomValidity","toggleButtonState","inputList","buttonElement","input","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","content","placesList","popupImg","imgCard","imgCaption","closeButtonPopup","popupEdit","buttonFormSubmit","nameInput","jobInput","profileTitle","profileDescription","profileImage","openButtonPopupAdd","openButtonPopupEdit","popupEditAvatar","formAvatar","buttonSubmitAvatar","inputAvatarForm","avatarContainer","popupAdd","formForImage","placeInput","linkInput","buttonSubmitPopupAdd","popupDeleteCard","formForDeleteCard","formSelector","renderLoading","isLoading","preventDefault","patternMismatch","validationMessage","isValid","setEventListeners","enableValidation","value","body","JSON","stringify","about","patchProfileRequest","finally","reset","url","includes","resolve","avatar","avatarData","style","backgroundImage","postAddCardRequest","prepend","cardId","handleDeleteCardSubmit","all","_ref","_ref2","userData","cardsData","append","button","popup","target","closest","contains","closeOverlay"],"sourceRoot":""}